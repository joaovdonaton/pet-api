tags:
  - name: "pets"
    description: Endpoints relacionados aos pets

components:
  schemas:
    AscDescType:
      type: string
      default: desc
      enum:
        - asc
        - desc
    SortByType:
      type: string
      default: createdAt
      enum: 
        - age
        - createdAt
    PetType:
      type: string
      enum:
        - cat
        - dog
    PetRegister:
      type: object
      required: 
        - name
        - age
        - typeId
      properties:
        name:
          type: string 
          minLength: 1
          maxLength: 30
          example: pequeno pedrinho
        age:
          type: integer
          minimum: 0 
          maximum: 50
        typeId:
          description: tipo do animal
          type: string
          enum: [cat, dog]
          example: "cat"
        description:
          description: descrição do pet
          type: string
          minimum: 50
          maximum: 500
          example: 'pedrinho é um bichinho muito fofinho e bonitinho e eu amo ele muito.'
        nickname:
          description: apelido do pet
          type: string
          maximum: 30
          minimum: 1
          example: "pepe"
  
  parameters:
    LimitParam:
      name: limit
      description: return limit per page
      in: query
      required: false
      schema:
        type: integer
        maximum: 50
        minimum: 1
        default: 25
    PageParam:
      name: page
      description: current page
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    SortByParam:
      name: sortBy
      description: field to sort by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/SortByType'
    AscDescParam:
      name: ascDesc
      description: sortBy ascending or descending
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AscDescType'